@using Spellslinger.Components
@using Spellslinger.Services
@using System.Drawing
@inherits GameComponentBase

@if (Game.Player is not null)
{
	<table>
		<tr>
			<td>Strength</td>
			<td>@Game.Player.Stats.Strength</td>
			<td>Toughness</td>
			<td>@Game.Player.Stats.Toughness</td>
		</tr>
		<tr>
			<td>Willpower</td>
			<td>@Game.Player.Stats.Willpower</td>
			<td>Memory</td>
			<td>@Game.Player.Stats.Memory</td>
		</tr>
		<tr>
			<td>Health</td>
			<td>@Game.Player.Health.Value / @Game.Player.Health.Maximum</td>
			<td>Stamina</td>
			<td>@Game.Player.Stamina.Value / @Game.Player.Stamina.Maximum</td>
		</tr>
		<tr>
			<td colspan="4" style="background-color: black">
				<DualMeterBar Meter="Game.Player.HP" Color="Color.Lime" />
			</td>
		</tr>
		<tr>
			<td>Reserves</td>
			<td>@Game.Player.Reserves.Value / @Game.Player.Reserves.Maximum</td>
			<td>Mana</td>
			<td>@Game.Player.Mana.Value / @Game.Player.Mana.Maximum</td>
		</tr>
		<tr>
			<td colspan="4" style="background-color: black">
				<DualMeterBar Meter="Game.Player.MP" Color="Color.Cyan" />
			</td>
		</tr>
		<tr>
			<td>Experience</td>
			<td>@Game.Player.Experience</td>
			<td>Gold</td>
			<td>@Game.Player.Gold</td>
		</tr>
		<tr>
			<td colspan="2">Melee Spells</td>
			<td colspan="2">General Spells</td>
		</tr>
		<tr>
			<td colspan="2">
				<ul>
					@foreach (var spell in Game.Player.Knowledge.MeleeSpells)
					{
						<li>@spell.Name (@spell.MPCost MP)</li>
					}
					@for (var i = Game.Player.Knowledge.MeleeSpells.Count; i < Game.Player.MaxMeleeSpells; i++)
					{
						<li>(empty slot)</li>
					}
				</ul>
			</td>
			<td colspan="2">
				<ul>
					@foreach (var (i, spell) in Game.Player.Knowledge.GeneralSpells.Index())
					{
						<li>@Game.SpellKeys[i]: @spell.Name (@spell.MPCost MP)</li>
					}
					@for (var i = Game.Player.Knowledge.GeneralSpells.Count; i < Game.Player.MaxGeneralSpells; i++)
					{
						<li>@Game.SpellKeys[i]: (empty slot)</li>
					}
				</ul>
			</td>
		</tr>
	</table>
}